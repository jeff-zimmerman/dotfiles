#!/bin/bash 

# set default options
EMAIL=jaz.zimms@gmail.com
TYPE=ed25519
REPONAME=
DELETE=false
# get options from command line
while getopts ":f:e:n:t:d" opt; do
  case $opt in
    f) KEYNAME="$OPTARG"
    ;;
    e) EMAIL="$OPTARG"
    ;;
    n) REPONAME="$OPTARG"
    ;;
    t) TYPE="$OPTARG"
    ;;
    d) DELETE=true
    ;;
    \?) echo "Invalid option -$OPTARG" >&2
    ;;
  esac
done

if [ -z "$KEYNAME" ];
    then
        KEYNAME="id_${TYPE}_${REPONAME}${REPONAME:+_}github"
fi
false
# Check if key is already in .ssh/config and remove if it is
KEYREG="id_${TYPE:-\w+?_}${TYPE:+_}${REPONAME:-\w*?_?}${REPONAME:+_}github"
OLDKEY=$( grep -zoP "Host ${REPONAME}${REPONAME:+.}github.com\n\tHostName github.com\n\tUser git\n\tIdentityFile ~/.ssh/\K(${KEYREG})" ~/.ssh/config )

if [ -e ~/.ssh/config ] && [ -n "$OLDKEY" ];
    then
        sed -ie  "/Host ${REPONAME}${REPONAME:+.}github.com/,/${OLDKEY}/ d" ~/.ssh/config
fi

# remove old key files
if $DELETE && [ -n "$OLDKEY" ];
    then
        rm ~/.ssh/$OLDKEY*
fi


# Generate key
if ! $DELETE;
    then
    ssh-keygen -t $TYPE -C "$EMAIL" -f ~/.ssh/$KEYNAME
    # Add key to .ssh/config
    printf "\nHost ${REPONAME}${REPONAME:+.}github.com\n\tHostName github.com\n\tUser git\n\tIdentityFile ~/.ssh/${KEYNAME}" >> ~/.ssh/config
fi

