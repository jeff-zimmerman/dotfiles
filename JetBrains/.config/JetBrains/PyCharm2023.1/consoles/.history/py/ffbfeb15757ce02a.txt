for i, data in enumerate(train_loader):
    print(i)
    print(data)
    
-. . -..- - / . -. - .-. -.--
for i in (train_loader):
    print(i)
    
-. . -..- - / . -. - .-. -.--
i = 0   
-. . -..- - / . -. - .-. -.--
for s in train_loader:
    print(s, i)
    i += 1
    
-. . -..- - / . -. - .-. -.--
try:
    hf['signals'].read_direct(self.hf2np_signals, np.s_[:, hf_index], np.s_[...])
except ValueError:
    print('jhg')
    
-. . -..- - / . -. - .-. -.--
runfile('/home/jazimmerman/PycharmProjects/bes-edgeml-models/bes-edgeml-models/elm_prediction/src/trainer.py', wdir='/home/jazimmerman/PycharmProjects/bes-edgeml-models/bes-edgeml-models/elm_prediction/src')
-. . -..- - / . -. - .-. -.--
import h5py
-. . -..- - / . -. - .-. -.--
hf = h5py.File('/home/jazimmerman/PycharmProjects/bes-edgeml-models/bes-edgeml-models/turbulence_regime_classification/data/labeled_datasets/bes_signals_149994_labeled.hdf5')
-. . -..- - / . -. - .-. -.--
len(hf['signals'])
-. . -..- - / . -. - .-. -.--
hf['signals'].shape
-. . -..- - / . -. - .-. -.--
with valid_set as vs:
    valid_loader = DataLoader(vs,
                              batch_size=None,  # must be disabled when using samplers
                              sampler=BatchSampler(RandomBatchSampler(vs, args),
                                                   batch_size=args.batch_size,
                                                   drop_last=True)
                              )
    # evaluate validation data
    avg_val_loss, preds, valid_labels = engine.evaluate(
        valid_loader,
        print_every=args.valid_print_every
    )

-. . -..- - / . -. - .-. -.--
runfile('/home/jazimmerman/PycharmProjects/bes-edgeml-models/bes-edgeml-models/turbulence_regime_classification/train.py', wdir='/home/jazimmerman/PycharmProjects/bes-edgeml-models/bes-edgeml-models/turbulence_regime_classification')
-. . -..- - / . -. - .-. -.--
x = 'asdf'
-. . -..- - / . -. - .-. -.--
type(x)
-. . -..- - / . -. - .-. -.--
type(x) == str
-. . -..- - / . -. - .-. -.--
type(x) == "str"